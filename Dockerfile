FROM node:18-alpine AS base 


# Build image
FROM base AS builder
WORKDIR /app
COPY . .
RUN yarn --frozen-lockfile && yarn run build


# Prod image
FROM base AS runner
WORKDIR /app

ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG GITHUB_CLIENT_ID
ARG GITHUB_CLIENT_SECRET
ARG LINE_CLIENT_ID
ARG LINE_CLIENT_SECRET
ARG MICROSOFT_CLIENT_ID
ARG MICROSOFT_CLIENT_SECRET
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG SERVER_KEY
ARG SERVER_AUTH_KEY
ARG HOST_URL

ENV POSTGRES_USER=$POSTGRES_USER
ENV POSTGRES_PASSWORD=$POSTGRES_PASSWORD
ENV GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
ENV LINE_CLIENT_ID=$LINE_CLIENT_ID
ENV LINE_CLIENT_SECRET=$LINE_CLIENT_SECRET
ENV MICROSOFT_CLIENT_ID=$MICROSOFT_CLIENT_ID
ENV MICROSOFT_CLIENT_SECRET=$MICROSOFT_CLIENT_SECRET
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV SERVER_KEY=$SERVER_KEY
ENV SERVER_AUTH_KEY=$SERVER_AUTH_KEY
ENV HOST_URL=$HOST_URL



COPY package.json ./
# ENV NODE_ENV production
RUN yarn --frozen-lockfile
COPY --from=builder /app/build ./
COPY package.json ./migrations ./
COPY ./migrations ./migrations

RUN adduser --system --uid 1001 server
RUN chown server /app

USER server
WORKDIR /app

ENV PORT 80
EXPOSE 80

CMD ["yarn", "start"]


